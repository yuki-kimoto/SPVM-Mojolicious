# Copyright (c) 2025 Yuki Kimoto
# MIT License

class Mojolicious::Types {
  version_from Mojolicious;
  
  use Hash;
  
  # Fields
  has mapping : rw Hash of string[]
    get {
      
      unless (exists $self->{mapping}) {
        $self->{mapping} = Hash->new({
          appcache => ["text/cache-manifest"],
          atom     => ["application/atom+xml"],
          bin      => ["application/octet-stream"],
          css      => ["text/css"],
          gif      => ["image/gif"],
          gz       => ["application/x-gzip"],
          htm      => ["text/html"],
          html     => ["text/html;charset=UTF-8"],
          ico      => ["image/x-icon"],
          jpeg     => ["image/jpeg"],
          jpg      => ["image/jpeg"],
          js       => ["application/javascript"],
          json     => ["application/json;charset=UTF-8"],
          mp3      => ["audio/mpeg"],
          mp4      => ["video/mp4"],
          ogg      => ["audio/ogg"],
          ogv      => ["video/ogg"],
          pdf      => ["application/pdf"],
          png      => ["image/png"],
          rss      => ["application/rss+xml"],
          sse      => ["text/event-stream"],
          svg      => ["image/svg+xml"],
          ttf      => ["font/ttf"],
          txt      => ["text/plain;charset=UTF-8"],
          webm     => ["video/webm"],
          woff     => ["font/woff"],
          woff2    => ["font/woff2"],
          xml      => ["application/xml", "text/xml"],
          zip      => ["application/zip"]
        });
      }
      
      return $self->{mapping};
    }
  ;
  
}
