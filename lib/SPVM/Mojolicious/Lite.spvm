# Copyright (c) 2025 Yuki Kimoto
# MIT License

class Mojolicious::Lite extends Mojolicious {
  
  use FindBin;
  use Re;
  use Mojo::File;
  use Mojolicious::Routes;
  
  version_from Mojolicious;
  
  # Fields
  has routes : rw Mojolicious::Routes;
  
  has root : rw Mojolicious::Routes;
  
  # Class Method
  static method new : Mojolicious::Lite () {
    
    my $home = FindBin->Bin;
    
    my $exe = FindBin->Script;
    
    my $moniker = Mojo::File->path($exe)->basename;
    
    Re->s(my $_ = [$moniker], "\.(pl|pm|t)$", "");
    $moniker = $_->[0];
    
    my $app = new Mojolicious::Lite;
    
    $app->set_moniker($moniker);
    
    my $routes = $app->routes;
    $routes->set_namespaces(new string[0]);
    
    $app->{routes} = $routes;
    
    $app->{root} = $routes;
    
    return $app;
  }
  
  # Instance Methods
  method any : Mojolicious::Routes ($arg1 : object = undef, $arg2 : object = undef, $arg3 : object = undef, $arg4 : object = undef) {
    
    my $routes = $self->routes;
    
    $routes->any($arg1, $arg2, $arg3, $arg4);
  }
  
  method del : Mojolicious::Routes ($arg1 : object = undef, $arg2 : object = undef, $arg3 : object = undef) {
    
    my $routes = $self->routes;
    
    $routes->delete($arg1, $arg2, $arg3);
  }
  
  method get : Mojolicious::Routes ($arg1 : object = undef, $arg2 : object = undef, $arg3 : object = undef) {
    
    my $routes = $self->routes;
    
    $routes->get($arg1, $arg2, $arg3);
  }
  
  method options : Mojolicious::Routes ($arg1 : object = undef, $arg2 : object = undef, $arg3 : object = undef) {
    
    my $routes = $self->routes;
    
    $routes->options($arg1, $arg2, $arg3);
  }
  
  method patch : Mojolicious::Routes ($arg1 : object = undef, $arg2 : object = undef, $arg3 : object = undef) {
    
    my $routes = $self->routes;
    
    $routes->patch($arg1, $arg2, $arg3);
  }
  
  method post : Mojolicious::Routes ($arg1 : object = undef, $arg2 : object = undef, $arg3 : object = undef) {
    
    my $routes = $self->routes;
    
    $routes->post($arg1, $arg2, $arg3);
  }
  
  method put : Mojolicious::Routes ($arg1 : object = undef, $arg2 : object = undef, $arg3 : object = undef) {
    
    my $routes = $self->routes;
    
    $routes->put($arg1, $arg2, $arg3);
  }
  
  method under : Mojolicious::Routes ($arg1 : object = undef, $arg2 : object = undef, $arg3 : object = undef) {
    
    my $root = $self->root;
    
    $self->{routes} = $root->under($arg1, $arg2, $arg3);
  }
  
}

__END__

TODO

  monkey_patch $caller,
    helper => sub { $app->helper(@_) },
    hook   => sub { $app->hook(@_) },
    plugin => sub { $app->plugin(@_) },
