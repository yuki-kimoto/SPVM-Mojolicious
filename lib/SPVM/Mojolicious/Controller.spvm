# Copyright (c) 2025 Yuki Kimoto
# MIT License

class Mojolicious::Controller {
  version_from Mojolicious;
  
  use Digest::SHA;
  use Mojo::ByteStream;
  use Mojo::URL;
  use Mojo::Util;
  use Mojolicious::Routes::Match;
  use Mojolicious;
  use Mojo::Transaction;
  use Mojo::Message::Request;
  use Mojo::Message::Response;
  
  our $ABSOLUTE : string;
  INIT {
    $ABSOLUTE = "^(?:[^:/?#]+:|//|#)";
  }
  
  has app : rw Mojolicious
    set {
      $self->{app} = $_;
      weaken $self->{app};
    }
  ;
  
  has tx : rw Mojo::Transaction
    set {
      $self->{tx} = $_;
      weaken $self->{tx};
    }
  ;
  
  has match : rw Mojolicious::Routes::Match
    get {
      unless (exists $self->{match}) {
        my $match = Mojolicious::Routes::Match->new;
        
        $match->set_root($self->app->routes);
        
        $self->{match} = $match;
      }
      
      return $self->{match};
    }
  ;
  
  has stash : rw Hash;
  
  has req : rw Mojo::Message::Request;
  
  has res : rw Mojo::Message::Response;
  
}
