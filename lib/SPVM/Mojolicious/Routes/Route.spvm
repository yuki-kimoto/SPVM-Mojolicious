# Copyright (c) 2025 Yuki Kimoto
# MIT License

class Mojolicious::Routes::Route {
  version_from Mojolicious;
  
  # Instance Methods
  method is_reserved : int ($name : string) {
    die "Not implemeneted.";
  }
  
  method any : void ($arg1 : object = undef, $arg2 : object = undef, $arg3 : object = undef, $arg4 : object = undef) {
    
    my $methods = (string[])undef;
    if ($arg1 isa string[]) {
      $methods = (string[])$arg1;
      $arg1 = $arg2;
      $arg2 = $arg3;
      $arg3 = $arg4;
    }
    else {
      $methods = new string[0];
    }
    
    $self->_generate_route($methods, $arg1, $arg2, $arg3);
  }
  
  method delete : void ($arg1 : object = undef, $arg2 : object = undef, $arg3 : object = undef) {
    $self->_generate_route(DELETE => $arg1, $arg2, $arg3);
  }
  
  method get : void ($arg1 : object = undef, $arg2 : object = undef, $arg3 : object = undef) {
    $self->_generate_route(GET => $arg1, $arg2, $arg3);
  }
  
  method options : void ($arg1 : object = undef, $arg2 : object = undef, $arg3 : object = undef) {
    $self->_generate_route(OPTIONS => $arg1, $arg2, $arg3);
  }
  
  method patch : void ($arg1 : object = undef, $arg2 : object = undef, $arg3 : object = undef) {
    $self->_generate_route(PATCH => $arg1, $arg2, $arg3);
  }
  
  method post : void ($arg1 : object = undef, $arg2 : object = undef, $arg3 : object = undef) {
    $self->_generate_route(POST => $arg1, $arg2, $arg3);
  }
  
  method put : void ($arg1 : object = undef, $arg2 : object = undef, $arg3 : object = undef) {
    $self->_generate_route(PUT => $arg1, $arg2, $arg3);
  }
  
  method under : void ($arg1 : object = undef, $arg2 : object = undef, $arg3 : object = undef) {
    $self->_generate_route(under => $arg1, $arg2, $arg3);
  }
  
  private method _generate_route : void ($method : object of string|string[], $arg1 : object = undef, $arg2 : object = undef, $arg3 : object = undef) {
    die "TODO";
  }

}
