# Copyright (c) 2025 Yuki Kimoto
# MIT License

class Mojo::Cookie::Request extends Mojo::Cookie {
  version_from Mojolicious;
  
  use Mojo::Util;
  
  # Class Methods
  static method new : Mojo::Cookie::Request () {
    
    my $self = new Mojo::Cookie::Request;
    
    return $self;
  }
  
  # Instance Methods
  method parse : Mojo::Cookie::Request[] ($string : string) {
    
    my $cookies = List->new(new Mojo::Cookie::Request[0]);
    
    my $tree = Mojo::Util->split_header($string // "");
    
    my $pairs = StringList->new;
    for my $pair (@$tree) {
      $pairs->push_($pair);
    }
    
    for (my $i = 0; $i < $pairs->length; $i += 2) {
      my $name = $pairs->get($i);
      my $value = $pairs->get($i + 1);
      
      if (Re->m($name, "^\$")) {
        next;
      }
      
      my $cookie = Mojo::Cookie::Request->new;
      $cookie->{name} = $name;
      $cookie->{value} = $value // "";
    }
    
    return $cookies->to_array->(Mojo::Cookie::Request[]);
  }
  
  method to_string : string () {
    
    my $name = $self->name;
    unless (length($name // "")) {
      return "";
    }
    
    my $value = $self->value // "";
    
    return Fn->join("=", [$name, Re->m($value, "[,;\" ]") ? Mojo::Util->quote($value) : $value]);
  }

}
